
MACRO(INSTALL_HEADERS_WITH_DIRECTORY HEADER_LIST SOURCE_DIR_PREFIX)

FOREACH(HEADER ${${HEADER_LIST}})
STRING(REGEX MATCH "(.*)[/\\]" DIR ${HEADER})
STRING(REGEX REPLACE "${SOURCE_DIR_PREFIX}" "" DIR ${DIR})
INSTALL(FILES ${HEADER} DESTINATION include/${DIR})
ENDFOREACH(HEADER)

ENDMACRO(INSTALL_HEADERS_WITH_DIRECTORY)



MACRO(COPY_HEADERS_IN_BIN_DIRECTORY FILE_LIST SOURCE_DIR_PREFIX DESTINATION_DIR)
FOREACH(FILE ${${FILE_LIST}})
STRING(REGEX MATCH "(.*)[/\\]" DIR ${FILE})
STRING(REGEX REPLACE "${SOURCE_DIR_PREFIX}" "" DIR ${DIR})
add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD        # Adds a post-build event to MyTest
COMMAND ${CMAKE_COMMAND} -E copy_if_different  # which executes "cmake - E copy_if_different..."
        "${FILE}"      # <--this is in-file
        ${DESTINATION_DIR}${DIR})

#MESSAGE(${PROJECT_NAME} "  " ${FILE}  "  "  ${DESTINATION_DIR}${DIR})
FILE(COPY ${FILE} DESTINATION ${DESTINATION_DIR}${DIR})
ENDFOREACH(FILE)
ENDMACRO(COPY_HEADERS_IN_BIN_DIRECTORY)


MACRO(CREATE_RESOURCE_FILE FILENAME FILES PREFIX)
FILE(WRITE ${FILENAME} "<RCC>\n\t<qresource prefix=\"/${PREFIX}\">\n")
FOREACH(FILE ${FILES})
STRING(REGEX REPLACE "${CMAKE_CURRENT_SOURCE_DIR}/" "" FILE ${FILE})
FILE(APPEND ${FILENAME} "\t\t<file>${FILE}</file>\n")
ENDFOREACH(FILE)
FILE(APPEND ${FILENAME} "\t</qresource>\n</RCC>")
ENDMACRO(CREATE_RESOURCE_FILE)


#Add some multithreaded build support
MARK_AS_ADVANCED(MULTITHREADED_BUILD)
set(MULTITHREADED_BUILD 8 CACHE STRING "How many threads are used to build the project")
if(MULTITHREADED_BUILD)
    if(${CMAKE_GENERATOR} MATCHES "Unix Makefiles")
            STRING(REGEX MATCH "-j[1-9]*" MATCHED_JOBS ${CMAKE_MAKE_PROGRAM})
            IF(MATCHED_JOBS)
                STRING(REGEX REPLACE "-j[1-9]*" -j${MULTITHREADED_BUILD} CMAKE_MAKE_PROGRAM ${CMAKE_MAKE_PROGRAM})
            ELSE()
                SET(CMAKE_MAKE_PROGRAM "${CMAKE_MAKE_PROGRAM} -j${MULTITHREADED_BUILD}")
            ENDIF()
            message(STATUS "Added arguments to CMAKE_BUILD_TOOL: ${CMAKE_MAKE_PROGRAM}")
    elseif(MSVC)
            STRING(REGEX MATCH "/MP" MATCHED_JOBS ${CMAKE_CXX_FLAGS})
            IF(MATCHED_JOBS)
            ELSE()
                SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
            ENDIF()
            message(STATUS "Added parallel build arguments to CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")
    endif()
endif()
